name: CI for SQLite3 Multiple Ciphers
on:
  push:
    branches:
    - main
    - aegis
    - register-dynamic-cipher
  pull_request:
    branches:
    - main

jobs:
  host_unix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, ubuntu-24.04-arm]
        cc_compiler: [gcc, clang]

    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc_compiler }}
    steps:
    - name: Install dependencies (macOS)
      run: brew install automake
      if: matrix.os == 'macos-latest'
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure
      run: |
        autoreconf
        ./configure
    - name: Build
      run: |
        make
    - name: Testing
      run: |
        ./sqlite3shell test1.db3 ".read test/test1.sql"
        ./sqlite3shell test2.db3 ".read test/test2.sql"
        ./sqlite3shell test/persons-aegis-testkey.db3 ".read test/test3.sql"
        ./sqlite3shell test/persons-ascon128-testkey.db3 ".read test/test4.sql"
        ./sqlite3shell dummy.db3 ".read test/sqlciphertest.sql"

  host_qemu:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: [armv7, aarch64]
        cc_compiler: [gcc]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build artifact
        # The Github Action for non-x86 CPU
        # https://github.com/uraimo/run-on-arch-action
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu24.04
          env: |
            CC: ${{ matrix.cc_compiler }}
          install: |
            apt-get update -q -y
            apt-get install -q -y "${{ matrix.cc_compiler }}" make automake
          run: |
            autoreconf
            ./configure
            make
            ./sqlite3shell test1.db3 ".read test/test1.sql"
            ./sqlite3shell test2.db3 ".read test/test2.sql"
            ./sqlite3shell test/persons-aegis-testkey.db3 ".read test/test3.sql"
            ./sqlite3shell test/persons-ascon128-testkey.db3 ".read test/test4.sql"
            ./sqlite3shell dummy.db3 ".read test/sqlciphertest.sql"
