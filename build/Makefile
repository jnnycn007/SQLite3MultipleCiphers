# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win32)
  sqlite3mc_lib_config = debug_win32
  sqlite3mc_dll_config = debug_win32
  sqlite3mc_shell_config = debug_win32
  sqlite3mc_libicu_config = debug_win32
  sqlite3mc_dllicu_config = debug_win32
  sqlite3mc_shellicu_config = debug_win32

else ifeq ($(config),debug_win64)
  sqlite3mc_lib_config = debug_win64
  sqlite3mc_dll_config = debug_win64
  sqlite3mc_shell_config = debug_win64
  sqlite3mc_libicu_config = debug_win64
  sqlite3mc_dllicu_config = debug_win64
  sqlite3mc_shellicu_config = debug_win64

else ifeq ($(config),release_win32)
  sqlite3mc_lib_config = release_win32
  sqlite3mc_dll_config = release_win32
  sqlite3mc_shell_config = release_win32
  sqlite3mc_libicu_config = release_win32
  sqlite3mc_dllicu_config = release_win32
  sqlite3mc_shellicu_config = release_win32

else ifeq ($(config),release_win64)
  sqlite3mc_lib_config = release_win64
  sqlite3mc_dll_config = release_win64
  sqlite3mc_shell_config = release_win64
  sqlite3mc_libicu_config = release_win64
  sqlite3mc_dllicu_config = release_win64
  sqlite3mc_shellicu_config = release_win64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := sqlite3mc_lib sqlite3mc_dll sqlite3mc_shell sqlite3mc_libicu sqlite3mc_dllicu sqlite3mc_shellicu

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

sqlite3mc_lib:
ifneq (,$(sqlite3mc_lib_config))
	@echo "==== Building sqlite3mc_lib ($(sqlite3mc_lib_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3mc_lib.make config=$(sqlite3mc_lib_config)
endif

sqlite3mc_dll:
ifneq (,$(sqlite3mc_dll_config))
	@echo "==== Building sqlite3mc_dll ($(sqlite3mc_dll_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3mc_dll.make config=$(sqlite3mc_dll_config)
endif

sqlite3mc_shell: sqlite3mc_lib
ifneq (,$(sqlite3mc_shell_config))
	@echo "==== Building sqlite3mc_shell ($(sqlite3mc_shell_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3mc_shell.make config=$(sqlite3mc_shell_config)
endif

sqlite3mc_libicu:
ifneq (,$(sqlite3mc_libicu_config))
	@echo "==== Building sqlite3mc_libicu ($(sqlite3mc_libicu_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3mc_libicu.make config=$(sqlite3mc_libicu_config)
endif

sqlite3mc_dllicu:
ifneq (,$(sqlite3mc_dllicu_config))
	@echo "==== Building sqlite3mc_dllicu ($(sqlite3mc_dllicu_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3mc_dllicu.make config=$(sqlite3mc_dllicu_config)
endif

sqlite3mc_shellicu: sqlite3mc_libicu
ifneq (,$(sqlite3mc_shellicu_config))
	@echo "==== Building sqlite3mc_shellicu ($(sqlite3mc_shellicu_config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3mc_shellicu.make config=$(sqlite3mc_shellicu_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f sqlite3mc_lib.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3mc_dll.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3mc_shell.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3mc_libicu.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3mc_dllicu.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3mc_shellicu.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win32"
	@echo "  debug_win64"
	@echo "  release_win32"
	@echo "  release_win64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   sqlite3mc_lib"
	@echo "   sqlite3mc_dll"
	@echo "   sqlite3mc_shell"
	@echo "   sqlite3mc_libicu"
	@echo "   sqlite3mc_dllicu"
	@echo "   sqlite3mc_shellicu"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"